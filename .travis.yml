# multiple tests suites
# working example can be found at https://github.com/scottohara/loot

language: ruby

# Cache gems
cache:
  bundler: true
  directories:
    - node_modules

addons:
  chrome: stable
  #firefox: latest

before_install:
  # - nvm install                         # Install node version from .nvmrc
  - gem install bundler:2.1.4
  - nvm install 12.13.1
  - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
  - chmod +x ./cc-test-reporter
  #- export DISPLAY=:99.0                # Display number for xvfb (for headless browser testing)
  #- sh -e /etc/init.d/xvfb start        # Start xvfb (for headless browser testing)

# install:
#   - bundle install --without production --path=${BUNDLE_PATH:-vendor/bundle}  # Install ruby gems, excluding production only gems such as unicorn (already present by default in Travis)
#   - npm install                         # Install npm dependencies
#   #- npm install karma-firefox-launcher codeclimate-test-reporter

# Setup the database
before_script: bundle exec rake db:create db:migrate
  - bin/setup
  - ./cc-test-reporter before-build

# Run the test suites
script:
  - bundle exec rspec           # Backend linting
  # - ./cc-test-reporter format-coverage --output coverage/codeclimate.$SUITE.json
  - bundle exec cucumber                    # Backend specs
  # - ./cc-test-reporter format-coverage --output coverage/codeclimate.$SUITE.json

env:
  global:
    - CC_TEST_REPORTER_ID=6f49430d48ab4caae864848fd4c385ee93d3a9439e640365535500f071f02208

# Pipe the coverage data to Code Climate
 after_script:
  - ./cc-test-reporter format-coverage -t simplecov -o coverage/codeclimate.backend.json coverage/.resultset.json # Format backend coverage
  - ./cc-test-reporter sum-coverage coverage/codeclimate.*.json -p                  # Sum both coverage parts into coverage/codeclimate.json
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then ./cc-test-reporter upload-coverage; fi  # Upload coverage/codeclimate.json
